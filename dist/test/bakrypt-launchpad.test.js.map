{"version":3,"file":"bakrypt-launchpad.test.js","sourceRoot":"","sources":["../../test/bakrypt-launchpad.test.ts"],"names":[],"mappings":"AAIA,OAAO,6BAA6B,CAAC;AAErC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,4CAA4C;IAC5C,2BAA2B;IAC3B,wEAAwE;IACxE,MAAM;IAEN,6BAA6B;IAC7B,yDAAyD;IACzD,yBAAyB;IACzB,+CAA+C;IAC/C,MAAM;IAEN,4CAA4C;IAC5C,wDAAwD;IACxD,MAAM;AACR,CAAC,CAAC,CAAC","sourcesContent":["import { html } from 'lit';\r\nimport { fixture, expect } from '@open-wc/testing';\r\nimport { component } from 'haunted';\r\nimport BakryptLaunchpad from '../src/BakryptLaunchpad.js';\r\nimport '../src/bakrypt-launchpad.js';\r\n\r\ndescribe('BakryptLaunchpad', () => {\r\n  // let element: component(BakryptLaunchpad);\r\n  // beforeEach(async () => {\r\n  //   element = await fixture(html`<bakrypt-invoice></bakrypt-invoice>`);\r\n  // });\r\n\r\n  // it('renders a h1', () => {\r\n  //   const h1 = element.shadowRoot!.querySelector('h1')!;\r\n  //   expect(h1).to.exist;\r\n  //   expect(h1.textContent).to.equal('My app');\r\n  // });\r\n\r\n  // it('passes the a11y audit', async () => {\r\n  //   await expect(element).shadowDom.to.be.accessible();\r\n  // });\r\n});\r\n"]}